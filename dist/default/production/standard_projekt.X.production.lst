

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Oct 04 19:30:26 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14     0000                     
    15                           ; Version 2.40
    16                           ; Generated 04/07/2022 GMT
    17                           ; 
    18                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F877A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50     0000                     	;# 
    51     0001                     	;# 
    52     0002                     	;# 
    53     0003                     	;# 
    54     0004                     	;# 
    55     0005                     	;# 
    56     0006                     	;# 
    57     0007                     	;# 
    58     0008                     	;# 
    59     0009                     	;# 
    60     000A                     	;# 
    61     000B                     	;# 
    62     000C                     	;# 
    63     000D                     	;# 
    64     000E                     	;# 
    65     000E                     	;# 
    66     000F                     	;# 
    67     0010                     	;# 
    68     0011                     	;# 
    69     0012                     	;# 
    70     0013                     	;# 
    71     0014                     	;# 
    72     0015                     	;# 
    73     0015                     	;# 
    74     0016                     	;# 
    75     0017                     	;# 
    76     0018                     	;# 
    77     0019                     	;# 
    78     001A                     	;# 
    79     001B                     	;# 
    80     001B                     	;# 
    81     001C                     	;# 
    82     001D                     	;# 
    83     001E                     	;# 
    84     001F                     	;# 
    85     0081                     	;# 
    86     0085                     	;# 
    87     0086                     	;# 
    88     0087                     	;# 
    89     0088                     	;# 
    90     0089                     	;# 
    91     008C                     	;# 
    92     008D                     	;# 
    93     008E                     	;# 
    94     0091                     	;# 
    95     0092                     	;# 
    96     0093                     	;# 
    97     0094                     	;# 
    98     0098                     	;# 
    99     0099                     	;# 
   100     009C                     	;# 
   101     009D                     	;# 
   102     009E                     	;# 
   103     009F                     	;# 
   104     010C                     	;# 
   105     010D                     	;# 
   106     010E                     	;# 
   107     010F                     	;# 
   108     018C                     	;# 
   109     018D                     	;# 
   110     0000                     	;# 
   111     0001                     	;# 
   112     0002                     	;# 
   113     0003                     	;# 
   114     0004                     	;# 
   115     0005                     	;# 
   116     0006                     	;# 
   117     0007                     	;# 
   118     0008                     	;# 
   119     0009                     	;# 
   120     000A                     	;# 
   121     000B                     	;# 
   122     000C                     	;# 
   123     000D                     	;# 
   124     000E                     	;# 
   125     000E                     	;# 
   126     000F                     	;# 
   127     0010                     	;# 
   128     0011                     	;# 
   129     0012                     	;# 
   130     0013                     	;# 
   131     0014                     	;# 
   132     0015                     	;# 
   133     0015                     	;# 
   134     0016                     	;# 
   135     0017                     	;# 
   136     0018                     	;# 
   137     0019                     	;# 
   138     001A                     	;# 
   139     001B                     	;# 
   140     001B                     	;# 
   141     001C                     	;# 
   142     001D                     	;# 
   143     001E                     	;# 
   144     001F                     	;# 
   145     0081                     	;# 
   146     0085                     	;# 
   147     0086                     	;# 
   148     0087                     	;# 
   149     0088                     	;# 
   150     0089                     	;# 
   151     008C                     	;# 
   152     008D                     	;# 
   153     008E                     	;# 
   154     0091                     	;# 
   155     0092                     	;# 
   156     0093                     	;# 
   157     0094                     	;# 
   158     0098                     	;# 
   159     0099                     	;# 
   160     009C                     	;# 
   161     009D                     	;# 
   162     009E                     	;# 
   163     009F                     	;# 
   164     010C                     	;# 
   165     010D                     	;# 
   166     010E                     	;# 
   167     010F                     	;# 
   168     018C                     	;# 
   169     018D                     	;# 
   170                           
   171                           	psect	strings
   172     005F                     __pstrings:
   173     005F                     stringtab:
   174     005F                     __stringtab:
   175     005F                     stringcode:	
   176                           ;	String table - string pointers are 1 byte each
   177                           
   178     005F                     stringdir:
   179     005F  3000               	movlw	high stringdir
   180     0060  008A               	movwf	10
   181     0061  0804               	movf	4,w
   182     0062  0A84               	incf	4,f
   183     0063  0782               	addwf	2,f
   184     0064                     __stringbase:
   185     0064  3400               	retlw	0
   186     0065                     __end_of__stringtab:
   187     0065                     _TMR0_TIME:
   188     0065  34D9               	retlw	217
   189     0066                     __end_of_TMR0_TIME:
   190     0007                     _PORTC	set	7
   191     0006                     _PORTB	set	6
   192     0001                     _TMR0	set	1
   193     000B                     _INTCONbits	set	11
   194     0081                     _OPTION_REGbits	set	129
   195     0087                     _TRISC	set	135
   196     0086                     _TRISB	set	134
   197                           
   198                           	psect	cinit
   199     000F                     start_initialization:	
   200                           ; #config settings
   201                           
   202     000F                     __initialization:
   203                           
   204                           ; Clear objects allocated to COMMON
   205     000F  01F0               	clrf	__pbssCOMMON& (0+127)
   206     0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   207     0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   208     0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   209     0013                     end_of_initialization:	
   210                           ;End of C runtime variable initialization code
   211                           
   212     0013                     __end_of__initialization:
   213     0013  0183               	clrf	3
   214     0014  120A  118A  2856   	ljmp	_main	;jump to C main() function
   215                           
   216                           	psect	bssCOMMON
   217     0070                     __pbssCOMMON:
   218     0070                     _sec_time:
   219     0070                     	ds	2
   220     0072                     _ms_time:
   221     0072                     	ds	2
   222                           
   223                           	psect	cstackCOMMON
   224     0074                     __pcstackCOMMON:
   225     0074                     ?_ISR:
   226     0074                     ??_ISR:	
   227                           ; 1 bytes @ 0x0
   228                           
   229     0074                     ?_setup:	
   230                           ; 1 bytes @ 0x0
   231                           
   232     0074                     ?_main:	
   233                           ; 1 bytes @ 0x0
   234                           
   235                           
   236                           ; 1 bytes @ 0x0
   237     0074                     	ds	2
   238     0076                     ??_setup:
   239     0076                     ??_main:	
   240                           ; 1 bytes @ 0x2
   241                           
   242                           
   243                           	psect	maintext
   244     0056                     __pmaintext:	
   245                           ; 1 bytes @ 0x2
   246 ;;
   247 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   248 ;;
   249 ;; *************** function _main *****************
   250 ;; Defined at:
   251 ;;		line 53 in file "main.c"
   252 ;; Parameters:    Size  Location     Type
   253 ;;		None
   254 ;; Auto vars:     Size  Location     Type
   255 ;;		None
   256 ;; Return value:  Size  Location     Type
   257 ;;                  1    wreg      void 
   258 ;; Registers used:
   259 ;;		wreg, status,2, status,0, pclath, cstack
   260 ;; Tracked objects:
   261 ;;		On entry : B00/0
   262 ;;		On exit  : 0/0
   263 ;;		Unchanged: 0/0
   264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   265 ;;      Params:         0       0       0       0       0
   266 ;;      Locals:         0       0       0       0       0
   267 ;;      Temps:          0       0       0       0       0
   268 ;;      Totals:         0       0       0       0       0
   269 ;;Total ram usage:        0 bytes
   270 ;; Hardware stack levels required when called: 2
   271 ;; This function calls:
   272 ;;		_setup
   273 ;; This function is called by:
   274 ;;		Startup code after reset
   275 ;; This function uses a non-reentrant model
   276 ;;
   277                           
   278     0056                     _main:	
   279                           ;psect for function _main
   280                           
   281     0056                     l674:	
   282                           ;incstack = 0
   283                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   284                           
   285                           
   286                           ;main.c: 54:     setup();
   287     0056  120A  118A  203E  120A  118A  	fcall	_setup
   288     005B                     l35:	
   289                           ;main.c: 56:     while(1) {
   290                           
   291     005B                     l36:	
   292                           ;main.c: 58:     }
   293                           
   294     005B  285B               	goto	l35
   295     005C  120A  118A  280C   	ljmp	start
   296     005F                     __end_of_main:
   297                           
   298                           	psect	text1
   299     003E                     __ptext1:	
   300 ;; *************** function _setup *****************
   301 ;; Defined at:
   302 ;;		line 32 in file "main.c"
   303 ;; Parameters:    Size  Location     Type
   304 ;;		None
   305 ;; Auto vars:     Size  Location     Type
   306 ;;		None
   307 ;; Return value:  Size  Location     Type
   308 ;;                  1    wreg      void 
   309 ;; Registers used:
   310 ;;		wreg, status,2
   311 ;; Tracked objects:
   312 ;;		On entry : 0/0
   313 ;;		On exit  : 0/0
   314 ;;		Unchanged: 0/0
   315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   316 ;;      Params:         0       0       0       0       0
   317 ;;      Locals:         0       0       0       0       0
   318 ;;      Temps:          0       0       0       0       0
   319 ;;      Totals:         0       0       0       0       0
   320 ;;Total ram usage:        0 bytes
   321 ;; Hardware stack levels used: 1
   322 ;; Hardware stack levels required when called: 1
   323 ;; This function calls:
   324 ;;		Nothing
   325 ;; This function is called by:
   326 ;;		_main
   327 ;; This function uses a non-reentrant model
   328 ;;
   329                           
   330     003E                     _setup:	
   331                           ;psect for function _setup
   332                           
   333     003E                     l630:	
   334                           ;incstack = 0
   335                           ; Regs used in _setup: [wreg+status,2]
   336                           
   337                           
   338                           ;main.c: 33:     TRISB = 0xff;
   339     003E  30FF               	movlw	255
   340     003F  1683               	bsf	3,5	;RP0=1, select bank1
   341     0040  1303               	bcf	3,6	;RP1=0, select bank1
   342     0041  0086               	movwf	6	;volatile
   343     0042                     l632:
   344                           
   345                           ;main.c: 34:     TRISC = 0x00;
   346     0042  0187               	clrf	7	;volatile
   347     0043                     l634:
   348                           
   349                           ;main.c: 35:     PORTB = 0x00;
   350     0043  1283               	bcf	3,5	;RP0=0, select bank0
   351     0044  1303               	bcf	3,6	;RP1=0, select bank0
   352     0045  0186               	clrf	6	;volatile
   353     0046                     l636:
   354                           
   355                           ;main.c: 36:     PORTC = 0x00;
   356     0046  0187               	clrf	7	;volatile
   357     0047                     l638:
   358                           
   359                           ;main.c: 38:     TMR0 = TMR0_TIME;
   360     0047  30D9               	movlw	217
   361     0048  0081               	movwf	1	;volatile
   362     0049                     l640:
   363                           
   364                           ;main.c: 40:     INTCONbits.GIE = 1;
   365     0049  178B               	bsf	11,7	;volatile
   366     004A                     l642:
   367                           
   368                           ;main.c: 41:     INTCONbits.PEIE = 1;
   369     004A  170B               	bsf	11,6	;volatile
   370     004B                     l644:
   371                           
   372                           ;main.c: 42:     INTCONbits.TMR0IE = 1;
   373     004B  168B               	bsf	11,5	;volatile
   374     004C                     l646:
   375                           
   376                           ;main.c: 43:     INTCONbits.TMR0IF = 0;
   377     004C  110B               	bcf	11,2	;volatile
   378     004D                     l648:
   379                           
   380                           ;main.c: 45:     OPTION_REGbits.T0CS = 0;
   381     004D  1683               	bsf	3,5	;RP0=1, select bank1
   382     004E  1303               	bcf	3,6	;RP1=0, select bank1
   383     004F  1281               	bcf	1,5	;volatile
   384     0050                     l650:
   385                           
   386                           ;main.c: 46:     OPTION_REGbits.T0SE = 0;
   387     0050  1201               	bcf	1,4	;volatile
   388     0051                     l652:
   389                           
   390                           ;main.c: 47:     OPTION_REGbits.PSA = 0;
   391     0051  1181               	bcf	1,3	;volatile
   392     0052                     l654:
   393                           
   394                           ;main.c: 48:     OPTION_REGbits.PS2 = 1;
   395     0052  1501               	bsf	1,2	;volatile
   396     0053                     l656:
   397                           
   398                           ;main.c: 49:     OPTION_REGbits.PS1 = 0;
   399     0053  1081               	bcf	1,1	;volatile
   400     0054                     l658:
   401                           
   402                           ;main.c: 50:     OPTION_REGbits.PS0 = 1;
   403     0054  1401               	bsf	1,0	;volatile
   404     0055                     l30:
   405     0055  0008               	return
   406     0056                     __end_of_setup:
   407                           
   408                           	psect	text2
   409     0017                     __ptext2:	
   410 ;; *************** function _ISR *****************
   411 ;; Defined at:
   412 ;;		line 14 in file "main.c"
   413 ;; Parameters:    Size  Location     Type
   414 ;;		None
   415 ;; Auto vars:     Size  Location     Type
   416 ;;		None
   417 ;; Return value:  Size  Location     Type
   418 ;;                  1    wreg      void 
   419 ;; Registers used:
   420 ;;		wreg, status,2, status,0
   421 ;; Tracked objects:
   422 ;;		On entry : 0/0
   423 ;;		On exit  : 0/0
   424 ;;		Unchanged: 0/0
   425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   426 ;;      Params:         0       0       0       0       0
   427 ;;      Locals:         0       0       0       0       0
   428 ;;      Temps:          2       0       0       0       0
   429 ;;      Totals:         2       0       0       0       0
   430 ;;Total ram usage:        2 bytes
   431 ;; Hardware stack levels used: 1
   432 ;; This function calls:
   433 ;;		Nothing
   434 ;; This function is called by:
   435 ;;		Interrupt level 1
   436 ;; This function uses a non-reentrant model
   437 ;;
   438                           
   439     0017                     _ISR:	
   440                           ;psect for function _ISR
   441                           
   442     0017                     i1l660:
   443                           
   444                           ;main.c: 15:     if (INTCONbits.TMR0IF == 1) {
   445     0017  1D0B               	btfss	11,2	;volatile
   446     0018  281A               	goto	u1_21
   447     0019  281B               	goto	u1_20
   448     001A                     u1_21:
   449     001A  2837               	goto	i1l27
   450     001B                     u1_20:
   451     001B                     i1l662:
   452                           
   453                           ;main.c: 16:         INTCONbits.TMR0IF = 0;
   454     001B  110B               	bcf	11,2	;volatile
   455     001C                     i1l664:
   456                           
   457                           ;main.c: 18:         ms_time++;
   458     001C  3001               	movlw	1
   459     001D  07F2               	addwf	_ms_time,f
   460     001E  1803               	skipnc
   461     001F  0AF3               	incf	_ms_time+1,f
   462     0020  3000               	movlw	0
   463     0021  07F3               	addwf	_ms_time+1,f
   464     0022                     i1l666:
   465                           
   466                           ;main.c: 19:         if (ms_time == 1000) {
   467     0022  30E8               	movlw	232
   468     0023  0672               	xorwf	_ms_time,w
   469     0024  3003               	movlw	3
   470     0025  1903               	skipnz
   471     0026  0673               	xorwf	_ms_time+1,w
   472     0027  1D03               	btfss	3,2
   473     0028  282A               	goto	u2_21
   474     0029  282B               	goto	u2_20
   475     002A                     u2_21:
   476     002A  2833               	goto	i1l672
   477     002B                     u2_20:
   478     002B                     i1l668:
   479                           
   480                           ;main.c: 20:             ms_time = 0;
   481     002B  01F2               	clrf	_ms_time
   482     002C  01F3               	clrf	_ms_time+1
   483     002D                     i1l670:
   484                           
   485                           ;main.c: 21:             sec_time++;
   486     002D  3001               	movlw	1
   487     002E  07F0               	addwf	_sec_time,f
   488     002F  1803               	skipnc
   489     0030  0AF1               	incf	_sec_time+1,f
   490     0031  3000               	movlw	0
   491     0032  07F1               	addwf	_sec_time+1,f
   492     0033                     i1l672:
   493                           
   494                           ;main.c: 24:         TMR0 = TMR0_TIME;
   495     0033  30D9               	movlw	217
   496     0034  1283               	bcf	3,5	;RP0=0, select bank0
   497     0035  1303               	bcf	3,6	;RP1=0, select bank0
   498     0036  0081               	movwf	1	;volatile
   499     0037                     i1l27:
   500     0037  0875               	movf	??_ISR+1,w
   501     0038  008A               	movwf	10
   502     0039  0E74               	swapf	??_ISR,w
   503     003A  0083               	movwf	3
   504     003B  0EFE               	swapf	btemp,f
   505     003C  0E7E               	swapf	btemp,w
   506     003D  0009               	retfie
   507     003E                     __end_of_ISR:
   508     007E                     btemp	set	126	;btemp
   509     007E                     wtemp0	set	126
   510                           
   511                           	psect	intentry
   512     0004                     __pintentry:	
   513                           ;incstack = 0
   514                           ; Regs used in _ISR: [wreg+status,2+status,0]
   515                           
   516     0004                     interrupt_function:
   517     007E                     saved_w	set	btemp
   518     0004  00FE               	movwf	btemp
   519     0005  0E03               	swapf	3,w
   520     0006  00F4               	movwf	??_ISR
   521     0007  080A               	movf	10,w
   522     0008  00F5               	movwf	??_ISR+1
   523     0009  120A  118A  2817   	ljmp	_ISR
   524                           
   525                           	psect	config
   526                           
   527                           ;Config register CONFIG @ 0x2007
   528                           ;	Oscillator Selection bits
   529                           ;	FOSC = HS, HS oscillator
   530                           ;	Watchdog Timer Enable bit
   531                           ;	WDTE = OFF, WDT disabled
   532                           ;	Power-up Timer Enable bit
   533                           ;	PWRTE = OFF, PWRT disabled
   534                           ;	Brown-out Reset Enable bit
   535                           ;	BOREN = OFF, BOR disabled
   536                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   537                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   538                           ;	Data EEPROM Memory Code Protection bit
   539                           ;	CPD = OFF, Data EEPROM code protection off
   540                           ;	Flash Program Memory Write Enable bits
   541                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   542                           ;	In-Circuit Debugger Mode bit
   543                           ;	DEBUG = 0x1, unprogrammed default
   544                           ;	Flash Program Memory Code Protection bit
   545                           ;	CP = OFF, Code protection off
   546     2007                     	org	8199
   547     2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    1
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       6       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       6      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Oct 04 19:30:26 2022

                      pc 0002                       l30 0055                       l35 005B  
                     l36 005B                       fsr 0004                      l630 003E  
                    l640 0049                      l632 0042                      l650 0050  
                    l642 004A                      l634 0043                      l652 0051  
                    l644 004B                      l636 0046                      l654 0052  
                    l646 004C                      l638 0047                      l656 0053  
                    l648 004D                      l658 0054                      l674 0056  
                    _ISR 0017                     ?_ISR 0074                     i1l27 0037  
                   _TMR0 0001                     u1_20 001B                     u1_21 001A  
                   u2_20 002B                     u2_21 002A                     _main 0056  
                   btemp 007E                     start 000C                    ??_ISR 0074  
                  ?_main 0074                    i1l660 0017                    i1l670 002D  
                  i1l662 001B                    i1l672 0033                    i1l664 001C  
                  i1l666 0022                    i1l668 002B                    _PORTB 0006  
                  _PORTC 0007                    _TRISB 0086                    _TRISC 0087  
                  _setup 003E                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 005F  
                 ??_main 0076                   ?_setup 0074        __end_of_TMR0_TIME 0066  
                 saved_w 007E  __end_of__initialization 0013           __pcstackCOMMON 0074  
          __end_of_setup 0056           _OPTION_REGbits 0081                  ??_setup 0076  
             __pmaintext 0056               __pintentry 0004               __stringtab 005F  
                __ptext1 003E                  __ptext2 0017                  _ms_time 0072  
   end_of_initialization 0013                _TMR0_TIME 0065      start_initialization 000F  
            __end_of_ISR 003E              __pbssCOMMON 0070                ___latbits 0002  
              __pstrings 005F        interrupt_function 0004              __stringbase 0064  
     __end_of__stringtab 0065                 _sec_time 0070               _INTCONbits 000B  
               intlevel1 0000                stringcode 005F                 stringdir 005F  
               stringtab 005F  
